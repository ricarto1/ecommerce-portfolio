import { GetServerSidePropsContext } from 'next';
import Head from 'next/head'
import Image from "next/image"

import { Grid, GridItem } from '@chakra-ui/react'
import { Header } from "@/components/header";
import { TopBar } from "@/components/topbar";
import { slugify } from '@/util/sluglify';

type Product = {
  id: number;
  title: string;
  price: number;
  description: string;
  category: string;
  image: string;
  rating: {
    count: number;
    rate: number;
  };
}

type Categories = "electronics"; "jewelery"; "men's clothing"; "women's clothing";

type Props = {
  products: Product[],
  categories: Categories[]
}

export default function Home({ products, categories }: Props) {
  return (
    <>
      <Head>
        <title>eCommerce Project</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <TopBar></TopBar>
        <Header></Header>

        <Grid templateColumns="540px 255px 255px" gap="8px"templateRows="200px 260px">
        {categories.map ((cat, key) => {
          const slug = slugify(cat)
          const imageUrl = `/pic-categories-${slug}.jpg`

          if (key == 0) {
          return <GridItem position="relative" w="100%" h="100%" bg="blue.500" rowSpan={2} key={key}><Image src={imageUrl} fill={true} alt=""/></GridItem>
          }
          if (key== categories.length-1){
          return <GridItem position="relative" w="100%" h="100%" bg="blue.500" colSpan={2} key={key}><Image src={imageUrl} fill={true} alt=""/></GridItem>
          }
          return <GridItem position="relative" w="100%" h="100%" bg="blue.500" key={key}><Image src={imageUrl} fill={true} alt=""/></GridItem>
        })}
        </Grid>

        {/*<ol>  
          {products.map(product => {
            return <li key={product.id}>{product.title}</li>
          })}
        </ol>*/}
      </main>
    </>
  )
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const products = await fetch('https://fakestoreapi.com/products')
    .then(res => res.json())
  const categories = await fetch('https://fakestoreapi.com/products/categories')
    .then(res => res.json())

  return {
    props: {
      products,
      categories
    }
  }
}
